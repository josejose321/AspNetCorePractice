@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model practiceAuthentication.Models.Practice;
@{
    Practice sample = ViewBag.sample;
}
<div class="pagetitle">
    <h1>AI</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item active">Open Ai</li>
        </ol>
    </nav>
</div>
<section class="section">
    

    
        <div class="card">
            <div class="card-header">
                <h3>Ask Anything</h3>
            
            </div>

            <div class="card-body">
                <div class="form-group py-3">
                <input type="text" value="Pogi ba ako?" placeholder="Ask your question here" class="form-control form-control-lg" name="input" id="input" />
                </div>
                <button id="submitBtn" class="btn btn-lg btn-primary float-end">Submit</button>
            </div>


            <div class="card-footer">
                <div id="output" class="display-6 text-center fw-bold">
                </div>
            </div>
        
        </div>
    

</section>


<script>
    var output = document.getElementById("output");
    $(document).ready(function()
    {
        openai_test($('#input').val());
        $("#submitBtn").on('click',function(e){
            e.preventDefault();
            
            openai_test($('#input').val());
        })
    });

    let open_ai_response;

    

     function openai_test(input) {

        var url = "https://api.openai.com/v1/engines/text-davinci-002/completions";

        var xhr = new XMLHttpRequest();
        xhr.open("POST", url);

        xhr.setRequestHeader("Content-Type", "application/json");
        xhr.setRequestHeader("Authorization", "Bearer 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");

        xhr.onreadystatechange = function () {
            if (xhr.readyState === 4) {
                console.log(xhr.status);
                console.log(xhr.responseText);
                open_ai_response = xhr.responseText;
                console.log(open_ai_response);
                var message = JSON.parse(open_ai_response)
                output.innerHTML = "";

                if(xhr.status == 429)
                {
                    swal("An Error Occured!", "Unsuficient Quota");
                }
                else
                {
                    displayAnswer(message.choices[0].text)
                }

           
                //console.log(message.choices[0].text.split(" "))

                
            }
        };

        var data = `{
        "prompt": "${input}",
        "temperature": 0.7,
        "max_tokens": 256,
        "top_p": 1,
        "frequency_penalty": 0.75,
        "presence_penalty": 0
      }`;

      xhr.send(data)
        
    }

    function displayAnswer(messages)
    {

        //output.innerHTML = "AI: ";
        //    messages.forEach(message => {
        //        setTimeout( function(){
        //            output.innerHTML += message + " ";
        //        },1000)
        //    })

        var typed = new Typed('#output', {
            strings: ["AI. . . . .",messages],
            typeSpeed: 30
        });

    }
</script>
