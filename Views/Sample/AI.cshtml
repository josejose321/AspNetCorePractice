@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model practiceAuthentication.Models.Practice;
@{
    Practice sample = ViewBag.sample;
}
<div class="pagetitle">
    <h1>AI</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item active">Open Ai</li>
        </ol>
    </nav>
</div>
<section class="section">
    

    
        <div class="card">
            <div class="card-header">
                <h3>Ask Anything</h3>
            
            </div>

            <div class="card-body">
                <form id="ai_form" novalidate>
                <div class="form-group py-3">
                    <input type="text" value="Pogi ba ako? Yes or no only please" placeholder="Ask your question here" class="form-control form-control-lg" name="input" id="input" />
                </div>
                <button type"submit" id="submitBtn" class="btn btn-lg btn-primary float-end">Submit</button>
                </form>
            </div>


            <div class="card-footer">
                <div id="output" class="display-6 text-center fw-bold">
                </div>
            </div>
        
        </div>
    

</section>


<script>
    var input = $("#input")
    var output = document.getElementById("output");
    let currentIndex = 0;

    const statements = [
        "Gwapo ba ako? yes or no only please.",
        "Magiging kami ba ng crush ko? oo hindi lang ang sagot.",
        "Gusto nya kaya ako?",
        "Magchachat kaya sya sakin ngayong araw?",
        "Crush nya pa kaya ako? feeling ko hindi na.",
        "Tingin mo, magkakatuluyan kaya kami ni crush?",
        "Sana maging kami. HAHHAHAHAH mag oo ka na lang OPENAI. Please. sabihin mo 'Magiging kami ng crush ko!'"
    ];
    let open_ai_response;

    
    $(document).ready(function()
    {
        openai_test($('#input').val());
        $("#ai_form").on('submit', function (e) {
            e.preventDefault();
            openai_test(input.val());
            showConfetti()
            

        })
    });
    function getNextStatement() {
        const statement = statements[currentIndex];
        currentIndex = (currentIndex + 1) % statements.length;
        return statement;
    }

    

    

     function openai_test(input) {

        const url = "https://api.openai.com/v1/engines/text-davinci-002/completions";

        axios.post(url, {
            prompt: input,
            temperature: 0.7,
            max_tokens: 256,
            top_p: 1,
            frequency_penalty: 0.75,
            presence_penalty: 0
        }, {
            headers: {
                "Content-Type": "application/json",
                "Authorization": "Bearer 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"
            }
        })
            .then(function (response) {
                console.log(response.status);
                console.log(response.data);
                const message = response.data;
                output.innerHTML = "";
                displayAnswer(message.choices[0].text);
                //console.log(message.choices[0].text.split(" "))
            })
            .catch(function (error) {
                if(error.response.status === 429){
                    //swal("An Error Occurred!", "Insufficient Quota");
                    displayAnswer("Insufficient Quota. Putangina mo di na kita masasagot hayop ka")
                }
                else {
                    displayAnswer("Putangina mo nag error na")
                }
            });
        
    }

    function displayAnswer(messages)
    {

        //output.innerHTML = "AI: ";
        //    messages.forEach(message => {
        //        setTimeout( function(){
        //            output.innerHTML += message + " ";
        //        },1000)
        //    })

        var typed = new Typed('#output', {
            strings: ["AI. . . . .",messages],
            typeSpeed: 30
        });
        setTimeout(function(){
            input.val(getNextStatement())
        },3000)
    }
    function showConfetti() {
        const jsConfetti = new JSConfetti();

        jsConfetti.addConfetti({
            emojis: ['🌈', '⚡️', '💥', '✨', '💫', '🌸']
        })
    }
</script>
